[{"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\index.js":"1","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\App.js":"2","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Reducer\\index.js":"3","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\NavBar\\NavBar.js":"4","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\Categories\\Categories.js":"5","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\data\\data.js":"6","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\ListItems\\ListItems.js":"7","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Action\\index.js":"8"},{"size":229,"mtime":1612935657981,"results":"9","hashOfConfig":"10"},{"size":496,"mtime":1612356636884,"results":"11","hashOfConfig":"10"},{"size":1042,"mtime":1612871785318,"results":"12","hashOfConfig":"10"},{"size":402,"mtime":1612329393811,"results":"13","hashOfConfig":"10"},{"size":3456,"mtime":1612850599807,"results":"14","hashOfConfig":"10"},{"size":1158,"mtime":1612848184357,"results":"15","hashOfConfig":"10"},{"size":907,"mtime":1612359673070,"results":"16","hashOfConfig":"10"},{"size":907,"mtime":1612843338348,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oxo6yj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\index.js",[],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\App.js",[],["36","37"],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Reducer\\index.js",[],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\NavBar\\NavBar.js",[],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\Categories\\Categories.js",["38","39","40","41","42","43","44","45"],"import React from 'react'\r\nimport {Link, useParams } from 'react-router-dom';\r\nimport items from '../../data/data'\r\nimport { useEffect, useState } from 'react';\r\nimport ListItems from '../ListItems/ListItems'\r\nimport '../Categories/Categories.css'\r\n//import { connect } from \"react-redux\";\r\nimport {fetchValue, ALL,BED,PILLOW} from '../../Action'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\n\r\n\r\nconst allCategories=['All', ...new Set(items.map((item) => item.category))];\r\n\r\nconst Categories = () => {\r\n  let {categoryId}=useParams();\r\n  const [categoryItem,setCategoryItem]= useState(allCategories);\r\n  const [itemList,getItemList] = useState(items);\r\n  const [copyList1,setCopyList1] = useState(items);\r\n  const copyItem=[...items];\r\n\r\n  useEffect(()=>{\r\n    fetchValues(categoryId);\r\n   },[])\r\n    //*****************get Items by Category ******************* \r\n\r\n  const fetchValues = (category)=>{\r\n     if(categoryId){\r\n    if(category === 'All') {\r\n      getItemList(copyItem);\r\n      setCopyList1(copyItem);\r\n    }\r\n    else{\r\n      const newItems = items.filter((item) => item.category === category);\r\n      getItemList(newItems);\r\n      setCopyList1(newItems);\r\n    }\r\n  }\r\n   else{\r\n     categoryId='All';\r\n    }\r\n  }\r\n\r\n\r\n  //************Search Code**************** */\r\n  const searchTerm = value =>{ \r\n    if(value===''){\r\n     getItemList(copyList1)\r\n    }\r\n      else{\r\n      const newTerm=copyList1.filter((item)=>item.title.toLowerCase().includes(value.toLowerCase()))\r\n      getItemList(newTerm)\r\n     }\r\n  }\r\n  //******************* Array sort******************** \r\n  const sortArr= type =>{\r\n    if(type === 'desc'){\r\n      const sorted = copyList1.sort((a, b) => b.price - a.price)\r\n      getItemList(JSON.parse(JSON.stringify(sorted)))\r\n    }\r\n    else if(type === 'asc'){\r\n    const sorted = copyList1.sort((a, b) => a.price - b.price) \r\n    getItemList(JSON.parse(JSON.stringify(sorted)))\r\n  }\r\n    else if(type === 'default'){\r\n      const sorted = copyList1.sort((a, b) => a.id - b.id) \r\n      getItemList(JSON.parse(JSON.stringify(sorted)))\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"home-grid\"> \r\n      <div className=\"top-bar\">\r\n        <h1 className=\"heading\">Our Products</h1>\r\n        <hr></hr>\r\n        <div className=\"below-bar\">\r\n\r\n         {/* Category button */}\r\n\r\n          {categoryItem?.map((categoryItem,index) => {\r\n          return ( \r\n             <Link to={`/${categoryItem}`}>\r\n            <button \r\n               className=\"btn\"\r\n              key={index}\r\n              onClick={() => fetchValues(categoryItem)}>\r\n              {categoryItem}\r\n            </button>\r\n            </Link>  \r\n          );\r\n        })}        \r\n        </div>\r\n        </div>\r\n         <div className=\"func-btn\">\r\n\r\n       {/* *Sorting dropdown */}\r\n\r\n       <div className=\"sort-btn\">\r\n       <label>Sort by</label>\r\n       <select onChange={(e)=>sortArr(e.target.value)} className=\"sel-sort\" >\r\n          <option value=\"default\">Default</option> \r\n         <option value=\"asc\">By price L-H</option>\r\n         <option value=\"desc\">By price H-L</option>\r\n         </select> \r\n        </div>\r\n\r\n         {/* Searching  */}\r\n         \r\n         <input type='text' \r\n         placeholder=\"Search.....\"\r\n         onChange={(e)=>searchTerm(e.target.value)}\r\n         className=\"sea-btn\"/>\r\n        </div>    \r\n        <ListItems item={itemList} />     \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Categories;","C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\data\\data.js",[],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Components\\ListItems\\ListItems.js",[],"C:\\Users\\urvis\\simform_training\\react practical\\shop-demo\\src\\Action\\index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":8,"column":9,"nodeType":"52","messageId":"53","endLine":8,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":8,"column":21,"nodeType":"52","messageId":"53","endLine":8,"endColumn":24},{"ruleId":"50","severity":1,"message":"55","line":8,"column":25,"nodeType":"52","messageId":"53","endLine":8,"endColumn":28},{"ruleId":"50","severity":1,"message":"56","line":8,"column":29,"nodeType":"52","messageId":"53","endLine":8,"endColumn":35},{"ruleId":"50","severity":1,"message":"57","line":9,"column":9,"nodeType":"52","messageId":"53","endLine":9,"endColumn":20},{"ruleId":"50","severity":1,"message":"58","line":9,"column":21,"nodeType":"52","messageId":"53","endLine":9,"endColumn":32},{"ruleId":"50","severity":1,"message":"59","line":17,"column":23,"nodeType":"52","messageId":"53","endLine":17,"endColumn":38},{"ruleId":"60","severity":1,"message":"61","line":24,"column":6,"nodeType":"62","endLine":24,"endColumn":8,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'fetchValue' is defined but never used.","Identifier","unusedVar","'ALL' is defined but never used.","'BED' is defined but never used.","'PILLOW' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'setCategoryItem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'categoryId' and 'fetchValues'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [categoryId, fetchValues]",{"range":"69","text":"70"},[804,806],"[categoryId, fetchValues]"]